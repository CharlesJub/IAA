tinytex::install_tinytex()
# install.packages('UsingR')
library(UsingR)
data(normtemp)
summary(normtemp)
sd(normtemp$temperature)
# install.packages("ggpubr")
library(ggpubr)
gghistogram(normtemp$temperature) # Use ggpubr gghistogram to speed up graph making
ggqqplot(normtemp$temperature)
ggboxplot(normtemp$temperature) +
geom_hline(yintercept = 98.6) +
coord_flip()
library(AmesHousing)
ames <- make_ordinal_ames()
gghistogram(ames$Sale_Price, y='density', fill = 'blue', alpha = 0.5) +
geom_density(alpha = 0.5)
gghistogram(log(ames$Sale_Price), y='density', fill = 'blue', alpha = 0.5) +
geom_density(alpha = 0.5)
gghistogram(ames$Gr_Liv_Area, y='density', fill = 'blue', alpha = 0.5) +
geom_density(alpha = 0.5)
ggqqplot(ames$Sale_Price)
ggqqplot(log(ames$Sale_Price))
str(ames)
# install.packages('UsingR')
library(UsingR)
data(normtemp)
summary(normtemp)
sd(normtemp$temperature)
# install.packages("ggpubr")
library(ggpubr)
gghistogram(normtemp$temperature) # Use ggpubr gghistogram to speed up graph making
ggqqplot(normtemp$temperature)
ggboxplot(normtemp$temperature) +
geom_hline(yintercept = 98.6) +
coord_flip()
library(AmesHousing)
ames <- make_ordinal_ames()
gghistogram(ames$Sale_Price, y='density', fill = 'blue', alpha = 0.5) +
geom_density(alpha = 0.5)
gghistogram(log(ames$Sale_Price), y='density', fill = 'blue', alpha = 0.5) +
geom_density(alpha = 0.5)
gghistogram(ames$Gr_Liv_Area, y='density', fill = 'blue', alpha = 0.5) +
geom_density(alpha = 0.5)
ggqqplot(ames$Sale_Price)
ggqqplot(log(ames$Sale_Price))
str(ames)
library(UsingR)
library(UsingR)
t.test(normtemp$temperature, mu=98.6)
?t.test
library(UsingR)
t.test(normtemp$temperature, mu=98.6, alternative = 'two.sided')
library(UsingR)
t.test(normtemp$temperature, mu=98.6, alternative = 'two.sided', p.value=0.05)
library(UsingR)
t.test(normtemp$temperature, mu=98.6, alternative = 'two.sided', p.value=0.01)
confint(normtemp$temperature, mu=98.6)
t.test(normtemp$temperature, mu=98.6)
t.test(normtemp$temperature, mu=98.6, conf.level = 0.95)
?normtemp
normtemp %>% filter(gender == 2) %>% t.test(.$temperature, mu = 98.6)
library(tidyverse)
normtemp %>% filter(gender == 2) %>% t.test(.$temperature, mu = 98.6)
library(UsingR)
library(tidyverse)
library(UsingR)
library(tidyverse)
t.test(normtemp$temperature, mu=98.6, conf.level = 0.95)
normtemp %>% filter(gender == 2) %>% t.test(.$temperature, mu = 98.6)
normtemp %>% filter(gender == 2) %>% t.test(temperature, mu = 98.6)
normtemp %>% filter(gender == 2)$temperature %>% t.test(mu = 98.6)
normtemp %>% filter(gender == 2)
normtemp %>% filter(gender == 2) %>% .$temperature
normtemp %>% filter(gender == 2) %>% t.test(.$temperature)
normtemp %>% filter(gender == 2) %>% t.test(_$temperature)
fem_temp <- normtemp %>% filter(gender == 2)
t.test(fem_temp$temperature, mu=98.6, conf.level = 0.95)
library(ggpubr)
library(ggpubr)
ggqqplot(normtemp, color = "gender")
library(ggpubr)
ggqqplot(normtemp$temperature, color = "gender")
?ggqqplot
library(ggpubr)
ggqqplot(normtemp, x="temperature", color = "gender")
library(ggpubr)
ggqqplot(normtemp, x="temperature", fill = "gender")
library(ggpubr)
ggqqplot(normtemp, x="temperature", color = "gender", palette = c("#00AFBB", "#E7B800"))
library(ggpubr)
normtemp <- normtemp %>% mutate(gender = as.factor(gender))
ggqqplot(normtemp, x="temperature", color = "gender", palette = c("#00AFBB", "#E7B800"))
library(ggpubr)
normtemp <- normtemp %>% mutate(gender = as.factor(gender))
ggqqplot(normtemp, x="temperature", color = "gender")
library(ggpubr)
normtemp <- normtemp %>% mutate(gender = as.factor(gender))
ggqqplot(normtemp, x="temperature", color = "gender")
shapiro.test(temperature~gender, data=normtemp)
library(ggpubr)
normtemp <- normtemp %>% mutate(gender = as.factor(gender))
ggqqplot(normtemp, x="temperature", color = "gender")
shapiro.test(normtemp$temperature[normtemp$gender == 2])
library(ggpubr)
normtemp <- normtemp %>% mutate(gender = as.factor(gender))
ggqqplot(normtemp, x="temperature", color = "gender")
shapiro.test(normtemp$temperature[normtemp$gender == 1])
shapiro.test(normtemp$temperature[normtemp$gender == 2])
library(ggpubr)
normtemp <- normtemp %>% mutate(gender = as.factor(gender))
ggqqplot(normtemp, x="temperature", color = "gender")
shapiro.test(normtemp$temperature[normtemp$gender == 1])
shapiro.test(normtemp$temperature[normtemp$gender == 2])
t.test(temperature ~ gender, data=normtemp)
??resid
library(ggpubr)
normtemp <- normtemp %>% mutate(gender = as.factor(gender))
# Test normality
ggqqplot(normtemp, x="temperature", color = "gender")
shapiro.test(normtemp$temperature[normtemp$gender == 1])
shapiro.test(normtemp$temperature[normtemp$gender == 2])
# Test variance
var.test(temperature~gender,data=normtemp)
t.test(temperature ~ gender, data=normtemp)
data("AirPassengers")
install.packages('tseries')
install.packages('forecast')
library(tseries)
library(forecast)
cycle(AirPassengers)
air1 = data.frame(AirPassengers)
air2 = air1 %>% mutate(summer=ifelse(cycle(AirPassengers) %in% 6:8,1,0))
# install.packages('tseries')
# install.packages('forecast')
library(tseries)
library(forecast)
cycle(AirPassengers)
air1 = data.frame(AirPassengers)
air2 = air1 %>% mutate(summer=ifelse(cycle(AirPassengers) %in% 6:8,1,0))
air2
ggqqplot(air2, x = 'AirPassengers', color='summer')
# install.packages('tseries')
# install.packages('forecast')
library(tseries)
library(forecast)
cycle(AirPassengers)
air1 = data.frame(AirPassengers)
air2 = air1 %>% mutate(summer=ifelse(cycle(AirPassengers) %in% 6:8,1,0))
air2$summer <- as.factor(air2$summer)
ggqqplot(air2, x = 'AirPassengers', color='summer')
var.test(AirPassengers~summer, data=air2)
t.test(AirPassengers~summer, data= air2, var.equal = FALSE)
